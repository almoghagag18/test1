from flask import Flask, request, render_template, redirect, url_for
from tensorflow.keras.applications import ResNet50
from tensorflow.keras.preprocessing import image
import numpy as np
import os

app = Flask(__name__)

# Load pre-trained model
model = ResNet50(weights='imagenet')

# Define labels
LABELS = {
    'cat': ['n02123045', 'n02123159', 'n02123394', 'n02123597'],
    'dog': ['n02084071', 'n02084225', 'n02084485', 'n02084732']
}

def preprocess_image(img_path):
    img = image.load_img(img_path, target_size=(224, 224))
    img_array = image.img_to_array(img)
    img_array = np.expand_dims(img_array, axis=0)
    return img_array / 255.0

def predict_label(img_path):
    img = preprocess_image(img_path)
    preds = model.predict(img)
    label_index = np.argmax(preds[0])
    label = model.decode_predictions(preds, top=1)[0][0][0]
    if label in LABELS['cat']:
        return "Cat"
    elif label in LABELS['dog']:
        return "Dog"
    return "Unknown"

@app.route("/", methods=["GET", "POST"])
def upload_image():
    if request.method == "POST":
        if "file" not in request.files:
            return "No file uploaded", 400
        file = request.files["file"]
        if file.filename == "":
            return "No selected file", 400
        filepath = os.path.join("uploads", file.filename)
        file.save(filepath)
        label = predict_label(filepath)
        os.remove(filepath)
        return f"The uploaded image is a: {label}"
    return render_template("index.html")

if __name__ == "__main__":
    os.makedirs("uploads", exist_ok=True)
    app.run(debug=True)
